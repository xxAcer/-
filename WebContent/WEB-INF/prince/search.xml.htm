<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[如何开发一个Chrome拓展。]]></title>
      <url>%2F2017%2F05%2F07%2Fhow-to-dev-chrome-extension%2F</url>
      <content type="text"><![CDATA[小记，以后可能还会用到，先记录一部分。翻译文档 360翻译文档 需要开发者资质，到 谷歌开发者平台 5刀认证成为开发者!(visa卡~) 建立一个manifest.json文件 123456789101112131415161718&#123; &quot;name&quot;: &quot;xxxx&quot;, &quot;manifest_version&quot;: 2, &quot;version&quot;: &quot;1.0.x&quot;, &quot;description&quot;: &quot;x&quot;, &quot;browser_action&quot;: &#123; &quot;default_icon&quot; : &quot;images/01.png&quot;, //默认icon &quot;default_popup&quot;: &quot;popup.html&quot; //插件页面 &#125;, &quot;content_scripts&quot;:[ &#123; &quot;matches&quot;: [&quot;*://*.acfun.cn/*&quot;,&quot;*://acfun.cn/*&quot;], //作用域名 &quot;js&quot;: [&quot;js/jquery.js&quot;,&quot;js/back.js&quot;], //触发的JS &quot;run_at&quot;:&quot;document_end&quot; //文档结束触发 还有其他配置 &#125; ] &#125; 摸清作用域和权限 就可以开始开发了~]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[GreenAcFun2.0 绿娘2.0版本使用教程]]></title>
      <url>%2F2017%2F04%2F26%2FGreenAcFun2-0%2F</url>
      <content type="text"><![CDATA[绿娘2.0版本使用教程更新内容1.移植到Chrome拓展，省掉繁琐的操作~2.扁平Ac娘没有啦，完全和和原来的表情大小保持一致~ 3.新增匿名娘和新娘效果图4.没有了。。。 只支持Chrome，其他浏览器的Acer请用旧版。 旧版 绿娘地址 戳我 操作步骤： 下载。 2.0 第一版 （不推荐）链接: 戳我 密码: 4uae 2.0 第二版 （推荐） 2.0 第二版更新内容： 新增匿名娘和新娘链接: 戳我 密码: 29qg 安装。 Chrome &gt;&gt; 设置 &gt;&gt; 扩展程序 &gt;&gt; 拖动刚刚下载的文件到浏览器。 彩蛋： 点击彩蛋有惊喜 跪求香蕉和彩蛋 绿娘A站传送门]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[绿化Ac娘制作全过程~]]></title>
      <url>%2F2017%2F04%2F20%2FGreenAc%2F</url>
      <content type="text"><![CDATA[绿化Ac娘制作全过程1. 下载要绿化的Ac娘表情包。 2. Ps上色。最终效果 3. 上传到图床或者其他地方，公网能访问就行。 http://tuchuang.org/ http://jiantuku.com/ 随便百度图床都可以 4. 使用JS脚本修改页面的HTML内容。重点! 查看Acfun的源码 找到Ueditor ul 对应的就是上面的Ac娘 彩娘之类的导航。div对应的就是上面的表情块，增加一块ul和Div就可以了。 注意图中的数字 上面ul li里面的数字对应的就是下面的div的区域，这个用来实现的就是点击导航的区域切换下面的图片区域。 接下来就是利用JS增加HTML内容就可以了~~~ 5. 大工告成！ ps：本人美工差，Acfun外链图片会被压缩到60x60px，所以会显的扁扁的，有闲的美工可以帮忙制作一下原图，我会抽空放上去~ 工作原因，没有太多时间弄这个，毕竟也没办法养家糊口😆]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Linux /proc/$pid 进程状态详解]]></title>
      <url>%2F2017%2F03%2F29%2Flinux%2F</url>
      <content type="text"><![CDATA[查看Linux运行中的进程状态。 查看运行中的程序的详情，需要用到程序的Pid，可以使用top获取pid aux/proc/[pid]/auxv包含传递给进程的ELF解释器信息，格式是每一项都是一个unsigned long长度的ID加上一个unsigned long长度的值。最后一项以连续的两个0x00开头。举例如下： # hexdump -x /proc/pid/auxv cmline/proc/[pid]/cmdline是一个只读文件，包含进程的完整命令行信息。如果这个进程是zombie进程，则这个文件没有任何内容。举例如下： cat /proc/2948/cmdline /usr/sbin/libvirtd–listen comm/proc/[pid]/comm包含进程的命令名。举例如下： cat /proc/2948/comm libvirtd cwd/proc/[pid]/cwd是进程当前工作目录的符号链接。举例如下： ls -lt /proc/2948/cwd lrwxrwxrwx 1 root root 0 Nov 9 12:14 /proc/2948/cwd -&gt; / environ/proc/[pid]/environ显示进程的环境变量。举例如下： strings /proc/2948/environ LANG=POSIXLC_CTYPE=en_US.UTF-8PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/binNOTIFY_SOCKET=@/org/freedesktop/systemd1/notifyLIBVIRTD_CONFIG=/etc/libvirt/libvirtd.confLIBVIRTD_ARGS=–listenLIBVIRTD_NOFILES_LIMIT=2048 exe/proc/[pid]/exe为实际运行程序的符号链接。举例如下： ls -lt /proc/2948/exe lrwxrwxrwx 1 root root 0 Nov 5 13:04 /proc/2948/exe -&gt; /usr/sbin/libvirtd fd/proc/[pid]/fd是一个目录，包含进程打开文件的情况。举例如下： ls -lt /proc/3801/fd total 0lrwx——. 1 root root 64 Apr 18 16:51 0 -&gt; socket:[37445]lrwx——. 1 root root 64 Apr 18 16:51 1 -&gt; socket:[37446]lrwx——. 1 root root 64 Apr 18 16:51 10 -&gt; socket:[31729]lrwx——. 1 root root 64 Apr 18 16:51 11 -&gt; socket:[34562]l-wx——. 1 root root 64 Apr 13 16:35 2 -&gt; /root/.vnc/localhost.localdomain:1.log 目录中的每一项都是一个符号链接，指向打开的文件，数字则代表文件描述符。 latency/proc/[pid]/latency显示哪些代码造成的延时比较大（使用这个feature，需要执行“echo 1 &gt; /proc/sys/kernel/latencytop”）。举例如下： cat /proc/2948/latency Latency Top version : v0.130667 10650491 4891 poll_schedule_timeout do_sys_poll SyS_poll system_call_fastpath 0x7f636573dc1d8 105 44 futex_wait_queue_me futex_wait do_futex SyS_futex system_call_fastpath 0x7f6365a167bc 每一行前三个数字分别是后面代码执行的次数，总共执行延迟时间（单位是微秒）和最长执行延迟时间（单位是微秒），后面则是代码完整的调用栈。 limits/proc/[pid]/limits显示当前进程的资源限制。举例如下： cat /proc/2948/limits Limit Soft Limit Hard Limit Units Max cpu time unlimited unlimited seconds Max file size unlimited unlimited bytes Max data size unlimited unlimited bytes Max stack size 8388608 unlimited bytes Soft Limit表示kernel设置给资源的值，Hard Limit表示Soft Limit的上限，而Units则为计量单元。 maps/proc/[pid]/maps显示进程的内存区域映射信息。举例如下： cat /proc/2948/maps 其中注意的一点是[stack:]是线程的堆栈信息，对应于/proc/[pid]/task/[tid]/路径。 root/proc/[pid]/stack显示当前进程的内核调用栈信息，只有内核编译时打开了CONFIG_STACKTRACE编译选项，才会生成这个文件。举例如下： cat /proc/2948/stack statm/proc/[pid]/statm显示进程所占用内存大小的统计信息，包含七个值，度量单位是page（page大小可通过getconf PAGESIZE得到）。举例如下： cat /proc/2948/statm 72362 12945 4876 569 0 24665 0 各个值含义： a) 进程占用的总的内存； b）进程当前时刻占用的物理内存； c）同其它进程共享的内存； d）进程的代码段； e）共享库（从2.6版本起，这个值为0）； f）进程的堆栈； g）dirty pages（从2.6版本起，这个值为0）。 syscall/proc/[pid]/syscall显示当前进程正在执行的系统调用。举例如下： cat /proc/2948/syscall 7 0x7f4a452cbe70 0xb 0x1388 0xffffffffffdff000 0x7f4a4274a750 0x0 0x7ffd1a8033f0 0x7f4a41ff2c1d 第一个值是系统调用号（7代表poll），后面跟着6个系统调用的参数值（位于寄存器中），最后两个值依次是堆栈指针和指令计数器的值。如果当前进程虽然阻塞，但阻塞函数并不是系统调用，则系统调用号的值为-1，后面只有堆栈指针和指令计数器的值。如果进程没有阻塞，则这个文件只有一个“running”的字符串。 内核编译时打开了CONFIG_HAVE_ARCH_TRACEHOOK编译选项，才会生成这个文件。 wchan/proc/[pid]/wchan显示当进程sleep时，kernel当前运行的函数。举例如下： cat /proc/2948/wchan kauditd_]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Centos 卸载php并升级到php7]]></title>
      <url>%2F2017%2F03%2F16%2Fphp-install%2F</url>
      <content type="text"><![CDATA[Centos 卸载php并升级到php7或重新安装php5.6 如果安装了php，先卸载 yum remove php* php-common rpm安装php7的源 rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm 安装php和相关拓展 php 7yum install php70w.x86_64 php70w-cli.x86_64 php70w-common.x86_64 php70w-gd.x86_64 php70w-ldap.x86_64 php70w-mbstring.x86_64 php70w-mcrypt.x86_64 php70w-mysql.x86_64 php70w-pdo.x86_64 php 5.6yum install php56w.x86_64 php56w-cli.x86_64 php56w-common.x86_64 php56w-gd.x86_64 php56w-ldap.x86_64 php56w-mbstring.x86_64 php56w-mcrypt.x86_64 php56w-mysql.x86_64 php56w-pdo.x86_64 安装php-fpm php 7yum install php70w-fpm php5.6yum install php56w-fpm 检查php版本 php -v 搞定 😆 最近访客]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Github 使用方法列表，从入门到精(fang)通(qi)]]></title>
      <url>%2F2017%2F03%2F16%2Fgithub-help%2F</url>
      <content type="text"><![CDATA[Github 使用方法列表，从入门到精(fang)通(qi)部分网页可能需要科学爬墙才能看，需要梯子的同学可以看一下我的 Centos环境下搭建 Shadowsocks 服务端翻墙教程 新手看这里 最浅显易懂的Git入门教程目录 教程 通用教程 Git使用 GitHub Pages GitBook GitHub API Travis CI 文章 网站 常用网站 GitHub Rank Star管理 工具 常用工具 桌面工具 App 插件 命令行 Git平台与工具 项目 项目 库 教程通用教程 《Github 帮助文档》 中文翻译 - 包含了官方文档以及其他文章 GitHub Guides - 官方的GitHub使用指引 GitHub 秘籍 - 本书为 Github 中级教程，适用在 Github 上做开源项目、制作自己的博客和协同做项目的开发者。 Github全程指南-如何高效使用？ - 作为一名开发者，Github上面有很多东西值得关注学习，可是刚刚接触github，怎样一步步学习使用Github？怎样更高效的利用Github？ GotGitHub - 全面介绍 GitHub 网站的书 GitHub 开发指南 - 极客学院 - 本指南的目的是教会你如何实际运用 Github API，本指南是 GitHub 官方文档 Development Guides 的中文翻译版本。 怎样使用 GitHub？ - 知乎问题 如何高效利用GitHub gitignore - GitHub官方的.gitignore模板集合 GitHub 漫游指南 - phodal的GitHub故事与教程 Github MarkDown语法指南 - 使用Github必备 git/github guide - 使用Git和GitHub的指导 如何编辑 Wiki - 非常好的GitHub Wiki使用教程 如何在GitHub上为开源项目做贡献？ - 14 小节课教你如何使用 GitHub，并为开源项目做贡献。 GitHub Pull Request Tutorial - 学习提交你的第一个pr learn-with-open-source - 开放文档：《借助开源项目，学习软件开发》 open_source_analysis -借助openhub.net分析开源项目，列举了开源历史上那些的成功项目 《GitHub入门与实践》 -本书从Git的基本知识和操作方法入手，详细介绍了GitHub的各种功能，GitHub与其他工具或服务的协作，使用GitHub的开发流程以及如何将GitHub引入到企业中。在讲解GitHub的代表功能Pull Request时，本书专门搭建了供各位读者实践的仓库，邀请各位读者进行Pull Request并共同维护。 从0开始学习 GitHub 系列 - stormzhang写的GitHub教程 GitHub秘籍 - 本秘籍收录了一些Git和Github非常酷同时又少有人知的功能。 github-guide - GitHub 使用指南 Git 北京 - 《 Git 北京》是一本带初学者学会 git 版本控制工具和 github.com 社交化编程平台的书。 Github与Git简明教程 - lavor-zl 编写 Git使用 Linus讲解git - Google大会演讲，Linus介绍他创造git的原因，对比了git和svn。 Git教程 - 廖雪峰的官方网站 - 史上最浅显易懂的Git教程！ git - 简明指南 - 助你入门 git 的简明指南，木有高深内容 ;) 常用 Git 命令清单 - 来自阮一峰的网络日志，列出了 Git 最常用的命令。 Pro Git（中文版） - 书 Git Submodule使用完整教程 - Git Submodule功能刚刚开始学习可能觉得有点怪异，所以本教程把每一步的操作的命令和结果都用代码的形式展现给大家，以便更好的理解。 Git权威指南 - 书 git-flow 备忘清单 - git-flow 是一个 git 扩展集，按 Vincent Driessen 的分支模型提供高层次的库操作。 Git Magic -stanford出品 Atlassian Git Tutorials - atlassian出品 Try Git ( Interactive) -互动性的教你使用git Git (简体中文)) -archlinux出品 Git Community Book 中文版 -这本书汇聚了Git社区的很多精华, 其目的就是帮助你尽快的掌握Git. git-recipes -高质量的Git中文教程，来自国外社区的优秀文章和个人实践 git-it - GitHub一位女员工写的Git教程，繁体中文版在这里可以找到: http://jlord.us/git-it/index-zhtw.html Git Town - GitTown 定义了很多高级的 git 命令，例如 git ship / git sync 等以方便 git 的使用 git-tips - 最常用的Git的提示和技巧。 「Githug」Git 游戏通关流程 - 这个命令行工具通过游戏的方式来练习你的 Git 技能 progit2-zh - Pro Git，第二版，简体中文 git-style-guide- git风格指南 Git 进阶技巧 - 适合了解 Git 的基本使用，知道 commit、push、pull，希望掌握 Git 更多功能的人阅读。 learn-git-basics - git 指南 30 天精通 Git 版本控管 图解Git - 图解git中的最常用命令。如果你稍微理解git的工作原理，这篇文章能够让你理解的更透彻。 沉浸式学 Git - 简洁github教程，每步信息量都不大，可以尝试一下。 工作中常用的Git命令行 - 自己在工作中常用的Git命令行的小总结！ GitHub Pages GitHub Pages 指南 - 官方文档翻译版 GitHub Pages 指南 - 极客学院 - 本指南是 GitHub Pages 官网 GitHub Pages Basics 的中文翻译版本。 jekyll官方文档中文翻译版 - 将纯文本转换为静态博客网站 搭建一个免费的，无限流量的Blog—-github Pages和Jekyll入门 - 示范如何在github上搭建Blog，你可以从中掌握github的Pages功能，以及Jekyll软件的基本用法。更重要的是，你会体会到一种建立网站的全新思路。 免费使用Jekyll+Github Page搭建博客入门攻略 - Jekyll建站 jekyll 学习资料整理 - 在学习的同时将内容整理很多相关资料 jekyll-style-guide hexo你的博客 - hexo出自台湾大学生tommy351之手，是一个基于Node.js的静态博客程序，其编译上百篇文字只需要几秒。 如何搭建一个独立博客——简明Github Pages与Hexo教程 - 这是一篇很详尽的独立博客搭建教程，里面介绍了域名注册、DNS设置、github和Hexo设置等过程。 Hexo 中文版 - hexo官网中文版 像 geek 一样写博客 - 结合了Octopress GitBook GitBook 简明教程 - 本教程主要围绕 GitBook 的安装，使用，集成，书籍发布，个性化以及实用插件几个方面。 Gitbook 入门教程 - 本书将简单介绍如何安装、编写、生成、发布一本在线图书,且示例全部在windows下展示(其他系统差不多一致): Git教学 - GIT版本控制 Gitbook 使用入门 - 本书将简单介绍如何安装、编写、生成、发布一本在线图书。 api-guide - gitbook 的api 文档 GitHub API How to Use Github’s API with PHP -通过PHP如何使用GitHub API Travis CI 为 iOS 建立 Travis CI -在这篇文章中，我将向你展示如何一步步的在项目中集成 Travis。 Travis Ci的最接底气的中文使用教程 -Travis Ci的中文文档太少了，于是作者写了一篇简洁的教程 learn-travis - 一个对于node.js开发者快速入门的教程 文章 如何高效利用GitHub - 本文尝试谈谈GitHub的文化、技巧与影响 GitHub连击500天：让理想的编程成为习惯 - phodal对于GitHub的看法 Github装逼指南——Travis CI 和 Codecov - 关于持续集成和统计单测覆盖率 如何用Github去管理你的Idea - 用Github的README.md和Issues来管理我的idea GitHub开源项目负责人谈开源 - Brandon就其与开源的缘分、当前工作的职责、GitHub及员工与开源的关系等方面的问题一一进行了回答。 亲爱的GitHub - 致GitHub的一封公开信 thank-you-github - 一封从GitHub毕业的公开信 用Github issues作为blog的例子 2014年GitHub 中国开发者年度报告 - 使用python分析数据后的报告 Gist介绍与用法 - Gist https://gist.github.com/ 是Github的一个子服务 最活跃的GitHub用户 - 想看最活跃用户可以看这里 10+ HELPFUL GITHUB HACKS TO IMMEDIATELY BOOST YOUR PRODUCTIVITY - 10个立即提高你生产力的GitHub技能 Top 10 Git Tutorials for Beginners -教你使用git最好的10本书 使用GitHub进行团队合作 - 译文 一键收藏至Github - 通过 Rails 收藏文章，并自动提交至 github。 Github Hacking - Github的各种黑客技能 如何参与一个GitHub开源项目？ - 本文是Github官方给出的参与Github上开源项目的一些指导，对希望加入开源社区的开发者是一个不错的参考。 试译：开源项目成功的十条准则 -作者将自己30年来的开发经验，总结为开源软件的十条成功法则。 漫谈Github与开源 -本文作者为大二在读Geek学生关于GitHub与开源的理解。 关于Pull Request的十个建议 -作者Mark Seemann Github上都有哪些有用但不为大家熟知的小功能？ - 知乎问题 如果你用GitHub，可以这样提高效率 - 基于Github，搭建一整套代码管理服务 如何选择开源许可证？ - 六种开源协议GPL、BSD、MIT、Mozilla、Apache和LGPL之间的区别 如何用好github中的watch、star、fork - 介绍watch、star、fork的具体作用 git-commit-guide - git commit message 指南 git操作是不是很难记住？ - 笔者试着分类git的常用操作，方便同样是刚入门git的你查阅。 GUI for git|SourceTree|入门基础 - SourceTree简介 话说Svn与Git的区别 - SVN的特点是简单，只是需要一个放代码的地方时用是OK的。Git的特点版本控制可以不依赖网络做任何事情，对分支和合并有更好的支持。 多用Git少交税 Git版本控制与工作流 - 针对git版本控制和工作流的总结 在github上写博客 GitHub &amp; Bitbucket &amp; GitLab &amp; Coding 的对比分析 网站常用网站 GitHub Trending - GitHub官方的仓库和开发者流行榜 GitHuber.info - 最好用的GitHub人才挖掘工具 Code Review - 利用GitHub进行codereview的网站 GitHub Resume - 根据GitHub的信息生成简历 GitBook - Github上写书，发布到GitBook choose a license - GitHub发布了choosealicense.com网站，在呼吁开源项目开发者选择一个许可证的同时，还提供了许可证的一些简要说明。 vmap.phodal.com - 基于GitHub的O2O应用，寻找身边的GitHub大牛，根据你填写的公司位置查找 jekyllthemes - 一些好看的jekyll主题 GitHub Rank GitHub Rank (China) - GitHub上中国程序员的排名网站，根据follower GitHub Ranking | GitHub Awards - GitHub上程序员的排名网站，根据star GitHub Ranking - GitHub用户和仓库排名，根据star，不区分语言 diycode - GitHub Ranking - GitHub 全球 Developers, Organizations and Repositories 排行榜 Star管理 My Git Star - My Git Star 是一个开源项目，旨在提供个人 Github Star 管理服务，目前部署在 Heroku 之上，由 @Sidong 维护。 GitRep - 国外免费网站，目前打算试用。就像官网介绍的那样，不仅能管理star还能发现 Astral - 功能更加简洁。感觉不方便的地方就是需要先添加tag，才能给项目添加tag。 CODELF - 基于Google Lovefiled，简洁快速，从开发者角度考虑，用完就走，不给开发者更多的管理负担。开源在GitHub上的链接unbug/codelf gitconstellation - GitHub star 管理 工具常用工具 http://shields.io/ - 开源项目的徽章 Classroom for GitHub - Classroom for GitHub 可以自动创建代码仓库和访问控制，可以让老师很方便的在 GitHub 上发布代码任务和收集作业。 Hexo - 通过Github Pages写博客的Node.js框架 octicons - GitHub的 图标字体 markdown-editor - GitHub味道的markdown编辑器 backup-utils - backup-utils 是 Github 企业备份工具，它包括一些备份和恢复工具。这些备份工具实现了多项用于备份主机的高级功能，还原功能也已经包括在 GitHub Enterprise 中。 gistblog -gistblog 是一个简单的 Node.js 应用，使用 Github 的认证系统和 gist 提供的后台存储来实现博客的功能。可使用 Markdown 编写博客。 openspace -Openspace 是一个用来将你在 Github 上的项目汇总显示在一个网页里的应用。 primer -Primer 是 Github 工具包，用于 Github 前端设计。 https://gitter.im - 专门给GitHub开源项目或者开源作者提供的聊天软件 boennemann - badges - 各种徽章 GitTorrent 桌面工具 ohmystar - Mac上管理你GitHub star的工具 GithubPulse - OS X状态栏的APP，帮你记住你在GitHub每天的贡献 githubtrending - OS X状态栏的APP，显示GitHub Trending，也有iOS端 ghstatus - OS X状态栏的APP，显示GitHub Status pophub - OS X状态栏的APP，显示GitHub 的activities git-dude - git commit通知 App MVVMReactiveCocoa - GitBucket iOS App，一个GitHub第三方客户端 Monkey - Monkey是一个GitHub第三方iOS客户端，主要是用来展示GitHub上的开发者的排名，以及仓库的排名。 react-native-gitfeed - 一个React Native写的Github客户端，支持iOS和Android githot - GitHot是一个Android App,用来发现世界上最流行的项目和人 CodeHub - CodeHub是C#写的，它是iOS设备上最好的GitHub仓库浏览和维护工具。 ioctocat - GitHub的iOS客户端 napcat - 一个比较全面的GitHub的iOS客户端 RepoStumble - 查看GitHub仓库的手机客户端 GithubTrends - Material Design风格的查看GitHub仓库trending app ForkHub - Android平台的GitHub客户端 GitEgo - Android平台的GitHub客户端 Sources - 一个极简的 Github 客户端，Sources。内置几十个语法高亮的主题可供选择。 igithub - github 的iPhone端 gitmonitor-ios - 一个通知你不用再push代码的iOS app GithubWidget - 轻量级显示Github用户的贡献、星数、Follower数、热门仓库的App。 GitPocket - Swift编写GitHub客户端 GitHubContributionsiOS - 显示你的GitHub Contributions的Today Extension,App Store链接,Contributions for GitHub 插件 octotree -浏览器扩展，树状格式显示GitHub的代码 octo-linker - 这款谷歌 Chrome 扩展允许您轻松地浏览 GitHub.com 上的文件和包。 github-hovercard - GitHub Hovercard 是一个浏览器扩展，实现了展示用户在 Github 上信息的信息卡功能，支持 Firefox 和 Chrome 浏览器。 notifier-for-github-chrome - 一个浏览器扩展，它能显示 Github 通知的未读数量 github-menu-back - 一款修改 GitHub 导航栏为之前状态的 Chrome 插件 gitsense-extensions - GitSense 是一个 Chrome 插件，可以让你在浏览 Github 的时候体验更好。 git-draw - 谷歌 Chrome 扩展，给GitHub提交历史画个画 ShowInGitHub - Xcode插件，打开选中行的GitHub提交页面 Reveal-In-GitHub - 有关GitHub的Xcode插件 Visual Studio - 有关GitHub的Visual Studio插件 github-sublime-theme - GitHub Sublime 主题 GitHubinator - sublime插件，显示选中文本上的远程GitHub仓库 alfred-github-workflow - Alfred 2上使用GitHub命令 ZenHub -ZenHub 能优化你的 GitHub 工作流，是轻量级的 Chrome 浏览器插件。 github-gmail - 在Gmail内快速打开GitHub的通知 chrome-github-avatars - 谷歌Chrome扩展，可以让你的GitHub主页显示用户的头像。 tab-size-on-github - 谷歌Chrome和Opera扩展，让代码缩进为4个空格而不是8个 hide-files-on-github - 谷歌Chrome和Opera扩展，隐藏点文件 github-highlight-selected - 谷歌Chrome和Safari扩展，代码高亮，看起来像sublime github-awesome-autocomplete - 谷歌Chrome和Safari以及Firefox扩展，在GitHub的搜索栏加入自动补全功能 chrome-github-mate - 谷歌Chrome扩展，下载单个文件 Pages2Repo - 谷歌Chrome扩展，通过GitHub Pages网站就能访问仓库。 lovely-forks - 谷歌Chrome扩展，显示fork你仓库中star最多的 github-pr-filter - 谷歌Chrome扩展，在pr中过滤文件 github-ast-viewer - 谷歌Chrome扩展，增加代码的抽象语法树 github-canned-responses - 谷歌Chrome扩展，评论pr或者issue的时候有一些可选项 categoric - 谷歌Chrome扩展，为你的通知分类 octo-preview - 谷歌Chrome扩展，预览你评论的markdown内容 GifHub - 谷歌Chrome扩展，GifHub一个往GitHub评论里边插入Gif动画的Chrome插件 star-history-plugin - 查看仓库star历史的插件 open-on-github - atom插件，打开文件在github.com refined-github - chrome插件，简化你的github，增加了一些可用的功能 gitpress - github的wordpress插件，用于列出用户的仓库 jquery-github -jquery的插件显示github仓库 sublime-text-git - sublime的git插件 git-plugin - jenkins的git插件 github-oauth-plugin - jenkins的github oauth登录插件 twitter-for-github - 在github上显示用户twitter的chrome插件 Hudson-GIT-plugin - Hudson上的GIT插件 git-time-machine - atom插件查看提交历史 GitDiff - Xcode插件 vim-gitgutter - git的vim 插件 命令行 hub - github官方出品的命令行工具，让你更好地使用github gitflow gh -gh 是一个用 Go 语言开发的 Github 命令行客户端。 node-gh -Node GH 是基于 Node.js 编写的 Github 命令行工具。 gitsome - supercharged Github Client git-blame-someone-else - 吐槽别人的烂代码 git-pulls - github pull requests的命令后行工具 git-scribe - 写电子书的命令行工具 github-gem - github命令行工具 ghterm - github终端 git-sh - 适合git的bash工作环境 legit - 灵感来自于github for mac的git 命令行工具 git-sweep - git命令行工具，帮助你清理已经merge到master的分支 github-email - 获取用户的邮箱 git-smart git-subtree git-town git-fire - 紧急情况下保存代码 gitsome - Git/GitHub命令行工具 Git平台与工具 git - git源码 sourcetree - Windows 和Mac OS X 下免费的 Git客户端 gitbucket - Scala编写的开源Git平台，扩展性好，兼容GitHub gogs - Gogs (Go Git Service) 是一款极易搭建的自助 Git 服务，由无闻编写并开源在GitHub。 gitlab - GitLab 是一个用于仓库管理系统的开源项目，地址在gitlabhq git-annex - git管理大文件 gitx - Mac平台上的Git GUI客户端 gity - mac的git客户端 svn2git - ruby 实现的迁移svn工程到git stupidgit - python编写的git的跨平台GUI GitUp - Objective-C编写的Mac上的Git客户端 项目项目 resume.github.com - 根据用户的github信息生成简历 github-trending - 记录下GitHub历史上的每日trending GitHub-Dark - 黑色的GitHub网站风格 github-gists - 拿到一个GitHub用户的所有gist Get-Your-GitHub-Card - 基于jquery拿到你的GitHub用户资料 ohmyrepo - 一个 GitHub 仓库分析工具 greenhat - 一个让GitHub全绿的“旁门左道”的东西。 gitfiti - 滥用github提交历史 Github-profile-name-writer - 把github提交历史变成你的名字 github-contributions - 可以让你的 github 提交日历排出有趣的图案 github-corners - 显示 “Fork me on GitHub” GitHub-jQuery-Repo-Widget - 一个GitHub风格的挂件，方便在页面中展示GitHub项目 GitHub Archive - GitHub Archive 是一个记录GitHub时间线的项目 github-cards - GitHub Cards 用来展示你的简介 githut - 可视化了GitHub Archive的数据，网站链接，http://githut.info/ lolcommits - 每次提交Git都自拍一张 github-selfies - Github Selfies 可以在你 Github 的需求和贡献上加上你的自拍照。 badges - 收集GitHub上readme页显示的与javascript有关的各种徽章 MediumArticles - 一键收藏至Github GitHunt - 为你喜欢的仓库投票的项目 githug - 通过游戏的方式来练习Git的命令行工具 css3-github-buttons - 帮助你创建github风格的 button git-crypt - git加密 is-github-down - 检查github有没有down机 miaopull - 自动化pull工具 go-git- 通过go来从git服务器读取仓库 GitViz - 帮助你训练git时的可视化工具 learnGitBranching - 学习git的可视化工具 库 octokit - GitHub API的官方封装库 GitHub Java API (org.eclipse.egit.github.core) - eclipse出品，Java写的GitHub API的封装库 github - michael - JavaScript写的GitHub API的封装库 PyGithub - Python的GitHub API封装库 UAGithubEngine - Objective-C的GitHub API封装库 RxGitHubAPI -基于RxSwift的GitHub API封装库 GitHub API for Java -面向对象的GitHub API库 GitHubObjC -Objective-C实现的GitHub API库 go-github -Go实现的GitHub API库 ruby-github -Ruby实现的GitHub API库 libgit2 - Git核心库，通过它可以写一个自己的git应用。 Gift - 通过Swift绑定libgit2，通过它你可以clone一个仓库，查看commit，提交等。 gitkit-js - gitkit-js，SamyPesse开源的git的javascript实现，包含一系列API,可以管理git仓库，包括读文件，commit， clone，push，fetch等，可以工作在浏览器和node.js上 github3.py - GitHub API v3的python接口 PyGithub - GitHub API v3的python接口 github-backup - 备份GitHub仓库，包括branches, tags, other forks, issues, comments, wikis, milestones, pull requests, watchers, and stars. 通过haskell编写 github - Haskell - GitHub API 的Haskell接口 objective-git - Git的Objective-C实现 node-gitlab - gitlab的node api php-github-api - php的github api cocoagit - git的objetive-c实现 ruby-github - mbleigh写的ruby的github api Git.framework - mac os x 平台的objective-c的git实现 pygit2 - libgit2的python版 git.js - git的js实现 nodegit - git的node实现 GitSharp - .Net实现的git erlangit - erlang 的git实现 github4j - 一个github 下载的java api libgit2sharp - .Net实现的git Gift - Swift编写的git实现 SwiftGit2 - Swift编写的git实现 GithubPilot - Swift的GitHub API 封装 GitYourFeedback - 让你可以直接在iOS App内feedback时向GitHub提交issue 其他的awesome awesome-github -phillipadsmith的awesome-github awesome-browser-extensions-for-github -GitHub浏览器扩展收集列表 github-cheat-sheet -一些酷酷的Git和GitHub功能收集 awesome-github-templates - github issue 和 pull request的模版列表 awesome-github awesome-jekyll github pages静态网站集合 最近访客]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[上传本地项目到Github]]></title>
      <url>%2F2017%2F03%2F14%2FGithub-upload-localProject%2F</url>
      <content type="text"><![CDATA[1.建立GIT仓库 cd到你本地的项目根目录，执行git命令，会在当前目录创建一个.git隐藏文件夹 git init 2.添加文件到仓库 git add . 可以把.替换成你任何想要上传的文件或者文件夹，只有部分功能不需要上传的请在.gitignore文件中添加，例如 123.idea/ 文件夹*.log 所有日志文件Thmubs.db 指定的文件 3.commit到远程仓库 git commit -m &quot;注释语句&quot; 4.获取Repository地址 从github中获取到自己的Repository的地址。 注意 123是URL地址，不是Github的仓库地址.类似：https://github.com/justcodingnobb/bloghttps://github.com/你的github账号名/你的Repository名字 5. 关联仓库到Github git remote add origin https://github.com/你的github账号名/你的Repository名字 6. 上传代码到Github git push -u origin master 操作完没有异常就是成功了，可能会要你输入账号密码，输入就ok了！😆 tips: 如果在最后上传代码的时候遇到这样的错误. 请输入 git pull --rebase origin master 原因是仓库里面的License或者Readme.md之类的文件没有下载下来，同步一下就好了。👌😄 最近访客]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Centos环境下搭建Shadowsocks服务端翻墙]]></title>
      <url>%2F2017%2F03%2F13%2Fshadowsocks-config%2F</url>
      <content type="text"><![CDATA[1.shell登录服务器 2. 安装python-pipyum install python-pip 3. 安装shadowsockspip install shadowsocks 4.快速启动nohup sslocal -s your-server-ip -p your-server-port -l 1080 -k your-server-passwd -t 600 -m rc4-md5 &gt; /dev/null 2&gt;&amp;1 &amp; 4.1 文件启动shadowsocks 在一个你找到的地方新建一个json文件，如新建/var/shadowsocks.json文件 1234567891011 &#123; "server":"your_server_ip", #ss服务器IP "server_port":your_server_port, #端口 "local_address": "127.0.0.1", #本地ip "local_port":1080, #本地端口 "password":"your_server_passwd",#连接ss密码 "timeout":300, #等待超时 "method":"rc4-md5", #加密方式 "fast_open": false, # true 或 false。如果你的服务器 Linux 内核在3.7+，可以开启 fast_open 以降低延迟。开启方法： echo 3 &gt; /proc/sys/net/ipv4/tcp_fastopen 开启之后，将 fast_open 的配置设置为 true 即可 "workers": 1 # 工作线程数&#125; 保存文件之后运行 nohup sslocal -c /etc/shadowsocks.json /dev/null 2&gt;&amp;1 &amp; 来启动shadowsocks开机自动启动 echo &quot; nohup sslocal -c /etc/shadowsocks.json /dev/null 2&gt;&amp;1 &amp;&quot; /etc/rc.local 注解： nohup : 后台运行并记录日志 you-server-ip : 替换成本机IP your-server-port : 替换成你的端口 your-server-passwd : 设置你的密码 rc4-md5 : shadowsocks加密方式 默认就好 注意：如果你采用的Centos7.x系统 建议禁用FireWalld防火墙，使用iptables防火墙 并且开放你设置的端口。 5. 配置客户端开始翻墙 windows、IOS、Android、Mac都可以使用，在服务器端配置完毕之后下载Shadowsocks，启动！ 填上地址，端口，密码，启动代理，完成！✌️ 最近访客]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[搭建个人博客+翻墙神器之如何选择国外的VPS]]></title>
      <url>%2F2017%2F03%2F12%2FchooseVps%2F</url>
      <content type="text"><![CDATA[推荐VPS服务器 Vultr服务器地址，体验送10刀 推荐!!! linode服务器地址,推荐找一些推荐人的链接注册，基本都送10到20刀的体验 ps 都需要信用卡 双币卡最好 😆推荐这两个是因为他们有日本的VPS，大陆访问起来会快一点，不推荐新加坡的IP，因为我用的是Vultr，所以linode的推荐地址暂时还没有，有需要的自己去找推荐注册链接。 推荐Linux系统，Centos或者Ubuntu根据自己需要选择，推荐Centos 😏具体的配置看个人的需求，只是搭建个人博客简单使用推荐买一个月5刀的VPS，也不贵，一个月也就30块。 买好了之后就开始搭建个人博客或者部署翻墙神器吧~ 最近访客]]></content>
    </entry>

    
  
  
</search>
